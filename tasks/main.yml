---
# tasks file for ansible-role-jenkins


- block:

  - name: Install dependencies
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - openjdk-17-jdk
      - gnupg
      - nginx
      - openssl

  # Добавляем репозиторий Jenkins
  - name: Add Jenkins GPG key
    apt_key:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
      state: present

  - name: Add Jenkins repository
    apt_repository:
      repo: 'deb http://pkg.jenkins.io/debian-stable binary/'
      state: present

  - name: Update APT cache
    apt:
      update_cache: yes

  - name: Install Jenkins
    apt:
      name: jenkins
      state: present

  - name: create dir /etc/jenkins
    ansible.builtin.file:
      path: /etc/jenkins
      owner: jenkins
      group: jenkins
      state: directory
      mode: '0600'

  - name: create dir /etc/jenkins
    ansible.builtin.file:
      path: /var/lib/jenkins/init.groovy.d
      owner: jenkins
      group: jenkins
      state: directory
      mode: '0755'

  - name: Create basic authorisation for Jenkins
    template:
      src: basic-security.groovy.j2
      dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
      owner: jenkins
      group: jenkins
      mode: '0640'
    no_log: true
    notify: 
      - restart jenkins

  - name: Configure jenkins systemd service
    template:
      src: jenkins.service.j2
      dest: "/usr/lib/systemd/system/jenkins.service"
    notify:
      - reload systemd 
      - restart jenkins

  tags:
    - install
    - never

- block:

  - name: Install nginx
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - gnupg
      - nginx
      - openssl

  - name: Configure Nginx for Jenkins SSL
    template:
      src: jenkins_nginx.conf.j2
      dest: /etc/nginx/sites-available/jenkins
    notify: restart nginx

  - name: Enable Nginx Jenkins site
    file:
      src: /etc/nginx/sites-available/jenkins
      dest: /etc/nginx/sites-enabled/jenkins
      state: link

  - name: restart nginx
    service:
      name: nginx
      state: restarted

  tags:
    - nginx
    - never

# Вызов отдельной задачи для генерации сертификатов
- include_tasks: cert-creaate.yml
  tags: 
    - cert-create
    - never

# Если сертификаты не генерируются, загружаем их из Vault
- include_tasks: cert-vault.yml
  tags:
    - cert-vault
    - never

- block:
  - name: Wait for Jenkins to be ready
    uri:
      url: http://localhost:8080/jenkins
      status_code: [200, 403, 401, 301]
      return_content: yes
    register: jenkins_status
    retries: 10
    delay: 15
    until: jenkins_status.status in [200, 403, 401, 301]

  - name: check Jenkins availability via Nginx
    uri:
      url: "https://{{ jenkins_domain }}/jenkins"
      status_code: [200, 403, 401, 301]
      return_content: yes
      validate_certs: no
    register: jenkins_status
    retries: 5
    delay: 5
    until: jenkins_status.status in [200, 403, 401, 301]
    ignore_errors: true
  
  tags:
    - always

# Install modules
- include_tasks: modules.yml
  tags: 
    - modules
    - never